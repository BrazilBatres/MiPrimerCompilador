E	->    E+T   |    E-T   | left_T 
left_T	-> left_T*S | left_T/S | left_S
T	->    T*S   |    T/S   |    S
left_S  ->   -S     |    S
S	->  (E)     |    num 

1-2-3
Resuelto poniendo recursividad de E por la izquierda

2--3
E -> E-T   -> left_T-T -> left_S-T -> S-T -> num-T -> num-S -> ERROR
E -> left_T-> left_S   -> S        -> F   -> ERROR

2*-2
E -> left_T -> left_T*S -> left_S*S -> S*S -> num*S -> ERROR
E -> left_T -> left_S   -> S     -> ERROR

-2+3
E -> E+T   -> left_T+T -> left_S+T -> -S+T -> -num+T -> -num+S -> -num+F -> -num+num
E -> left_T-> left_S   -> -S       -> ERROR

-2/6
E -> left_T -> left_T/S -> left_S/S -> -S/S -> -num/S -> -num/F -> -num/num
E -> left_T -> left_S   -> -S       -> ERROR
 
2-(-3)
E -> E-T -> left_T-T -> left_S-T -> S-T -> num-T -> num-S -> num-(E) -> num-(left_T) -> num-(left_S) -> num-(-S) -> num-(-num) 

(-3)*(-3)
E -> left_T -> left_T*S -> left_S*S -> S*S -> (E)*S -> (left_T)*S-> (left_S)*S->(-S)*S->(-num)*S -> (-num)*(-F) -> (-num)*(-num)

QUITAR RECURSIVIDAD POR LA IZQUIERDA
E	->  left_TE' 
E'      ->    +TE'  |    -TE'  |   e
left_T	-> left_Sleft_T'
left_T' -> *Sleft_T'| /Sleft_T'|   e
T	->    ST'
T'	->   *ST'   |    /ST'  |   e
left_S  ->   -S     |    S
S	->  (E)    |    num


//-8-(-6*(9-11)+18/(-3))